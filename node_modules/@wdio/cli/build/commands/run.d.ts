export function launchWithStdin(wdioConfPath: any, params: any): void;
export function launch(wdioConfPath: any, params: any): Promise<void>;
export function handler(argv: any): Promise<void>;
export const command: "run <configPath>";
export const desc: "Run your WDIO configuration file to initialize your tests. (default)";
export namespace cmdArgs {
    namespace watch {
        const desc: string;
        const type: string;
    }
    namespace hostname {
        export const alias: string;
        const desc_1: string;
        export { desc_1 as desc };
        const type_1: string;
        export { type_1 as type };
    }
    namespace port {
        const alias_1: string;
        export { alias_1 as alias };
        const desc_2: string;
        export { desc_2 as desc };
        const type_2: string;
        export { type_2 as type };
    }
    namespace path {
        const type_3: string;
        export { type_3 as type };
        const desc_3: string;
        export { desc_3 as desc };
    }
    namespace user {
        const alias_2: string;
        export { alias_2 as alias };
        const desc_4: string;
        export { desc_4 as desc };
        const type_4: string;
        export { type_4 as type };
    }
    namespace key {
        const alias_3: string;
        export { alias_3 as alias };
        const desc_5: string;
        export { desc_5 as desc };
        const type_5: string;
        export { type_5 as type };
    }
    namespace logLevel {
        const alias_4: string;
        export { alias_4 as alias };
        const desc_6: string;
        export { desc_6 as desc };
        export const choices: string[];
    }
    namespace bail {
        const desc_7: string;
        export { desc_7 as desc };
        const type_6: string;
        export { type_6 as type };
    }
    namespace baseUrl {
        const desc_8: string;
        export { desc_8 as desc };
        const type_7: string;
        export { type_7 as type };
    }
    namespace waitforTimeout {
        const alias_5: string;
        export { alias_5 as alias };
        const desc_9: string;
        export { desc_9 as desc };
        const type_8: string;
        export { type_8 as type };
    }
    namespace framework {
        const alias_6: string;
        export { alias_6 as alias };
        const desc_10: string;
        export { desc_10 as desc };
        const type_9: string;
        export { type_9 as type };
    }
    namespace reporters {
        const alias_7: string;
        export { alias_7 as alias };
        const desc_11: string;
        export { desc_11 as desc };
        const type_10: string;
        export { type_10 as type };
    }
    namespace suite {
        const desc_12: string;
        export { desc_12 as desc };
        const type_11: string;
        export { type_11 as type };
    }
    namespace spec {
        const desc_13: string;
        export { desc_13 as desc };
        const type_12: string;
        export { type_12 as type };
    }
    namespace exclude {
        const desc_14: string;
        export { desc_14 as desc };
        const type_13: string;
        export { type_13 as type };
    }
    namespace mochaOpts {
        const desc_15: string;
        export { desc_15 as desc };
    }
    namespace jasmineNodeOpts {
        const desc_16: string;
        export { desc_16 as desc };
    }
    namespace cucumberOpts {
        const desc_17: string;
        export { desc_17 as desc };
    }
}
export function builder(yargs: any): any;
//# sourceMappingURL=run.d.ts.map