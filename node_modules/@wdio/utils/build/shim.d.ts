export function executeHooksWithArgs(hooks: any, args: any): Promise<[any, any, any, any, any, any, any, any, any, any]>;
export function runFnInFiberContext(fn: any): (...args: any[]) => Promise<any>;
export function wrapCommand(commandName: any, fn: any): (...args: any[]) => Promise<any>;
export let hasWdioSyncSupport: boolean;
export let executeSync: typeof executeSyncFn;
export function executeAsync(fn: Function, retries: object, args?: any[]): Promise<any>;
export class executeAsync {
    constructor(fn: Function, retries: object, args?: any[]);
    wdioRetries: any;
}
export let runSync: any;
declare function executeSyncFn(fn: Function, retries: number, args?: any[]): Promise<any>;
declare class executeSyncFn {
    constructor(fn: Function, retries: number, args?: any[]);
    wdioRetries: any;
}
export {};
//# sourceMappingURL=shim.d.ts.map