/// <reference types="node" />
export default class WDIOReporter extends EventEmitter {
    constructor(options: any);
    options: any;
    outputStream: any;
    failures: any[];
    suites: {};
    hooks: {};
    tests: {};
    currentSuites: SuiteStats[];
    counts: {
        suites: number;
        tests: number;
        hooks: number;
        passes: number;
        skipping: number;
        failures: number;
    };
    retries: number;
    runnerStat: RunnerStats;
    get isSynchronised(): boolean;
    write(content: any): void;
    onRunnerStart(): void;
    onBeforeCommand(): void;
    onAfterCommand(): void;
    onScreenshot(): void;
    onSuiteStart(): void;
    onHookStart(): void;
    onHookEnd(): void;
    onTestStart(): void;
    onTestPass(): void;
    onTestFail(): void;
    onTestRetry(): void;
    onTestSkip(): void;
    onTestEnd(): void;
    onSuiteEnd(): void;
    onRunnerEnd(): void;
}
import EventEmitter from "events";
import SuiteStats from "./stats/suite";
import RunnerStats from "./stats/runner";
//# sourceMappingURL=index.d.ts.map