export function getBrowserObject(elem: any): any;
export function transformToCharString(value: any, translateToUnicode?: boolean): any[];
export function parseCSS(cssPropertyValue: Object, cssProperty: string): Object;
export function checkUnicode(value: string, isDevTools: any): any[];
export function findElement(selector: any): Promise<any>;
export function findElements(selector: any): Promise<any>;
export function verifyArgsAndStripIfElement(args: any): any;
export function getElementRect(scope: any): Promise<any>;
export function getAbsoluteFilepath(filepath: any): any;
export function assertDirectoryExists(filepath: any): void;
export function validateUrl(url: string, origError: any): string;
export function getScrollPosition(scope: object): any;
export function hasElementId(element: any): Promise<boolean>;
export function addLocatorStrategyHandler(scope: any): (name: any, script: any) => void;
export function getPrototype(scope: any): {
    puppeteer: {
        value: null;
        writable: boolean;
    };
    _NOT_FIBER: {
        value: boolean;
        writable: boolean;
        configurable: boolean;
    };
};
export function getElementFromResponse(res: (Object | undefined) | null): string | null;
export function enhanceElementsArray(elements: object[], parent: object, selector: string | Function, foundWith?: string, props?: any[]): object[];
export function isStub(automationProtocol: string): boolean;
export function getAutomationProtocol(config: any): Promise<any>;
export function updateCapabilities(params: any, automationProtocol: any): Promise<void>;
export function containsHeaderObject(base: object, match: object): boolean;
//# sourceMappingURL=index.d.ts.map