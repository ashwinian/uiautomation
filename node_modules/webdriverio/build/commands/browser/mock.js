"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const devtools_1 = __importDefault(require("../../utils/interception/devtools"));
const webdriver_1 = __importDefault(require("../../utils/interception/webdriver"));
const utils_1 = require("../../utils");
const SESSION_MOCKS = new Set();
async function mock(url, filterOptions) {
    const NetworkInterception = this.isSauce ? webdriver_1.default : devtools_1.default;
    if (!this.isSauce) {
        await this.getPuppeteer();
    }
    if (SESSION_MOCKS.size === 0 && !this.isSauce) {
        const [page] = await this.puppeteer.pages();
        const client = await page.target().createCDPSession();
        await client.send('Fetch.enable', {
            patterns: [{ requestStage: 'Response' }]
        });
        client.on('Fetch.requestPaused', NetworkInterception.handleRequestInterception(client, SESSION_MOCKS));
    }
    const browser = utils_1.getBrowserObject(this);
    const networkInterception = new NetworkInterception(url, filterOptions, browser);
    SESSION_MOCKS.add(networkInterception);
    if (this.isSauce) {
        await networkInterception.init();
    }
    return networkInterception;
}
exports.default = mock;
